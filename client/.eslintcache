[{"/Users/richardmiles/viPass/client/src/index.js":"1","/Users/richardmiles/viPass/client/src/reportWebVitals.js":"2","/Users/richardmiles/viPass/client/src/App.js":"3","/Users/richardmiles/viPass/client/src/pages/Login.js":"4","/Users/richardmiles/viPass/client/src/pages/Signup.js":"5","/Users/richardmiles/viPass/client/src/utils/queries.js":"6","/Users/richardmiles/viPass/client/src/utils/auth.js":"7","/Users/richardmiles/viPass/client/src/utils/mutations.js":"8","/Users/richardmiles/viPass/client/src/pages/Tiers.js":"9","/Users/richardmiles/viPass/client/src/pages/Admins.js":"10","/Users/richardmiles/viPass/client/src/pages/Permissions.js":"11","/Users/richardmiles/viPass/client/src/pages/Events.js":"12","/Users/richardmiles/viPass/client/src/components/AdminHome/AdminHome.js":"13","/Users/richardmiles/viPass/client/src/components/Footer/Footer.js":"14","/Users/richardmiles/viPass/client/src/components/Header/Header.js":"15","/Users/richardmiles/viPass/client/src/components/ClientHome/ClientHome.js":"16","/Users/richardmiles/viPass/client/src/components/TiersList/TiersList.js":"17","/Users/richardmiles/viPass/client/src/components/EventsForm/EventsForm.js":"18","/Users/richardmiles/viPass/client/src/components/TiersForm/TiersForm.js":"19","/Users/richardmiles/viPass/client/src/components/AdminsForm/AdminsForm.js":"20","/Users/richardmiles/viPass/client/src/components/EventsList/EventsList.js":"21","/Users/richardmiles/viPass/client/src/components/PermissionsList/PermissionsList.js":"22","/Users/richardmiles/viPass/client/src/components/AdminsList/AdminsList.js":"23","/Users/richardmiles/viPass/client/src/components/PermissionsForm/PermissionsForm.js":"24","/Users/richardmiles/viPass/client/src/components/PermissionModal/PermissionModal.js":"25"},{"size":500,"mtime":1636494147315,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1636494147317,"results":"28","hashOfConfig":"27"},{"size":4191,"mtime":1636495575173,"results":"29","hashOfConfig":"27"},{"size":3164,"mtime":1636494147316,"results":"30","hashOfConfig":"27"},{"size":2916,"mtime":1636494147317,"results":"31","hashOfConfig":"27"},{"size":1069,"mtime":1636495575182,"results":"32","hashOfConfig":"27"},{"size":1183,"mtime":1636494147318,"results":"33","hashOfConfig":"27"},{"size":2140,"mtime":1636497849831,"results":"34","hashOfConfig":"27"},{"size":1181,"mtime":1636495575182,"results":"35","hashOfConfig":"27"},{"size":954,"mtime":1636495575180,"results":"36","hashOfConfig":"27"},{"size":1241,"mtime":1636495575181,"results":"37","hashOfConfig":"27"},{"size":963,"mtime":1636495575180,"results":"38","hashOfConfig":"27"},{"size":3200,"mtime":1636495575174,"results":"39","hashOfConfig":"27"},{"size":807,"mtime":1636495575177,"results":"40","hashOfConfig":"27"},{"size":1013,"mtime":1636495575177,"results":"41","hashOfConfig":"27"},{"size":1475,"mtime":1636495575175,"results":"42","hashOfConfig":"27"},{"size":4738,"mtime":1636496500356,"results":"43","hashOfConfig":"27"},{"size":2205,"mtime":1636495826899,"results":"44","hashOfConfig":"27"},{"size":2443,"mtime":1636496696192,"results":"45","hashOfConfig":"27"},{"size":2537,"mtime":1636495575174,"results":"46","hashOfConfig":"27"},{"size":3467,"mtime":1636495575176,"results":"47","hashOfConfig":"27"},{"size":4363,"mtime":1636497849839,"results":"48","hashOfConfig":"27"},{"size":2116,"mtime":1636495575175,"results":"49","hashOfConfig":"27"},{"size":2516,"mtime":1636495575178,"results":"50","hashOfConfig":"27"},{"size":1958,"mtime":1636497960128,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"abtsbs",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/richardmiles/viPass/client/src/index.js",[],["111","112"],"/Users/richardmiles/viPass/client/src/reportWebVitals.js",[],"/Users/richardmiles/viPass/client/src/App.js",[],"/Users/richardmiles/viPass/client/src/pages/Login.js",[],"/Users/richardmiles/viPass/client/src/pages/Signup.js",[],"/Users/richardmiles/viPass/client/src/utils/queries.js",[],"/Users/richardmiles/viPass/client/src/utils/auth.js",[],"/Users/richardmiles/viPass/client/src/utils/mutations.js",[],"/Users/richardmiles/viPass/client/src/pages/Tiers.js",["113","114","115"],"import React, {Component} from 'react';\n\n// Import the `useParams()` hook\n\nimport { useQuery } from '@apollo/client';\n\nimport TiersList from '../components/TiersList/TiersList';\nimport TiersForm from '../components/TiersForm/TiersForm';\n\nimport { QUERY_TIER } from '../utils/queries';\n\n\nexport default class Tiers extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render () {\n    return (\n      <main>\n        <div className=\"flex-row justify-center\">\n          <div className=\"col-12 col-md-8 mb-3\">\n           <div\n                className=\"col-12 col-md-10 mb-3 p-3\"\n                style={{border: '1px dotted #1a1a1a'}}\n              ><TiersList\n                apolloClient={this.props.apolloClient}\n                QueryUserData={this.props.QueryUserData}\n                currentUser={this.props.currentUser}\n                permissions={this.props.permissions}\n                tiers={this.props.tiers}\n                events={this.props.events}\n                admins={this.props.admins}\n                title=\"Some Tiers...\"\n              />\n                <TiersForm />\n              </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n};\n\n","/Users/richardmiles/viPass/client/src/pages/Admins.js",[],"/Users/richardmiles/viPass/client/src/pages/Permissions.js",["116","117","118"],"import React, {Component} from 'react';\n\n// Import the `useParams()` hook\n\nimport {useQuery} from '@apollo/client';\n\nimport PermissionsList from '../components/PermissionsList/PermissionsList';\nimport PermissionsForm from '../components/PermissionsForm/PermissionsForm';\n\nimport {QUERY_PERMISSIONS} from '../utils/queries';\n\n\nexport default class Permissions extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <main>\n        <div className=\"flex-row justify-center\">\n          <div className=\"col-12 col-md-8 mb-3\">\n            <div\n              className=\"col-12 col-md-10 mb-3 p-3\"\n              style={{border: '1px dotted #1a1a1a'}}\n            ><PermissionsList apolloClient={this.props.apolloClient}\n                              currentUser={this.props.currentUser}\n                              permissions={this.props.permissions}\n                              tiers={this.props.tiers}\n                              events={this.props.events}\n                              admins={this.props.admins}\n                              title=\"Some Permissions...\"\n            />\n              <PermissionsForm/>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\n","/Users/richardmiles/viPass/client/src/pages/Events.js",[],"/Users/richardmiles/viPass/client/src/components/AdminHome/AdminHome.js",["119","120","121"],"import { React, Component } from 'react';\nimport Permissions from '../../pages/Permissions';\nimport Tiers from '../../pages/Tiers';\nimport Admins from '../../pages/Admins';\nimport Events from '../../pages/Events';\nimport { Link, Route } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { ApolloClient, ApolloProvider, useQuery } from '@apollo/client';\n\nclass AdminHome extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n      <ApolloProvider>\n        <main>\n          <div className=\"flex-row justify-center\">\n            <div\n              className=\"col-12 col-md-10 mb-3 p-3\"\n              style={{ border: '1px dotted #1a1a1a' }}\n\n            >\n              <Link to=\"/AdminHome/Permissions\">\n                <Button color=\"white\" className=\"is-rounded\">\n                  <span>Edit Permissions</span>\n                </Button>\n              </Link>\n              <Link to=\"/AdminHome/Admins\">\n                <Button color=\"white\" className=\"is-rounded\">\n                  <span>Edit Admins</span>\n                </Button>\n              </Link>\n              <Link to=\"/AdminHome/Tiers\">\n                <Button color=\"white\" className=\"is-rounded\">\n                  <span>Edit Tiers</span>\n                </Button>\n              </Link>\n              <Link to=\"/AdminHome/Events\">\n                <Button color=\"white\" className=\"is-rounded\">\n                  <span>Edit Events</span>\n                </Button>\n              </Link>\n              <Route path=\"/AdminHome/Admins\">\n                <Admins />\n              </Route>\n              <Route path=\"/AdminHome/Permissions\">\n                <Permissions apolloClient={this.props.apolloClient}\n                             currentUser = {this.props.currentUser}\n                             QueryUserData={this.props.QueryUserData}\n                             permissions= {this.props.permissions}\n                             tiers= {this.props.tiers}\n                             events= {this.props.events}\n                             admins= {this.props.admins}/>\n              </Route>\n              <Route path=\"/AdminHome/Tiers\">\n                <Tiers apolloClient={this.props.apolloClient}\n                       QueryUserData={this.props.QueryUserData}\n                       currentUser = {this.props.currentUser}\n                       permissions= {this.props.permissions}\n                       tiers= {this.props.tiers}\n                       events= {this.props.events}\n                       admins= {this.props.admins} />\n              </Route>\n              <Route path=\"/AdminHome/Events\">\n                <Events apolloClient={this.props.apolloClient}\n                        currentUser = {this.props.currentUser}\n                        QueryUserData={this.props.QueryUserData}\n                        permissions= {this.props.permissions}\n                        tiers= {this.props.tiers}\n                        events= {this.props.events}\n                        admins= {this.props.admins} />\n              </Route>\n            </div>\n          </div>\n        </main>\n      </ ApolloProvider>\n    );\n  }\n};\n\n\nexport default AdminHome;\n\n\n\n","/Users/richardmiles/viPass/client/src/components/Footer/Footer.js",[],"/Users/richardmiles/viPass/client/src/components/Header/Header.js",[],"/Users/richardmiles/viPass/client/src/components/ClientHome/ClientHome.js",["122","123","124"],"import React, { useState } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  ListGroup,\n  Button,\n  // Modal,\n} from \"react-bootstrap\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nconst ClientHome = () => {\n  const client = useState();\n  const { data } = useQuery(QUERY_ME);\n  const userData = data?.me || [];\n  if (!client) {\n    return <h3>Must be logged in</h3>;\n  }\n  console.log(userData);\n  return (\n    <div>\n      <>\n        <Jumbotron fluid className=\"text-light bg-dark\">\n          <Container>\n            <h1>Viewing client home</h1>\n          </Container>\n        </Jumbotron>\n        <Container>\n          <h2>\n            {userData.events?.length\n              ? `Viewing ${userData.events.length} saved ${\n                  userData.events.length === 1 ? \"event\" : \"events\"\n                }:`\n              : \"You have no events!\"}\n          </h2>\n          {userData.events?.map((event) => {\n            return (\n              <Card key={event.name} border=\"dark\">\n                <Card.Body>\n                  <Card.Title>\n                    <h2>{event.name}</h2>\n                    {/* {event.tiers?.map((tier) => {\n                      <h2>{tier.tierName}</h2>;\n                    })} */}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </Container>\n      </>\n    </div>\n  );\n};\n\nexport default ClientHome;\n","/Users/richardmiles/viPass/client/src/components/TiersList/TiersList.js",["125","126","127","128"],"import React, {Component} from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  ListGroup,\n  Button\n} from \"react-bootstrap\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport {REMOVE_TIER, ADD_TIER, REMOVE_PERMISSION} from \"../../utils/mutations\";\nimport { QUERY_TIER } from \"../../utils/queries\";\n// const [removeTier] = useMutation(REMOVE_TIER);\n// const [addTierToEvent] = useMutation(ADD_TIER)\n\nfunction HandleDeleteTier () {\n  const [removeTier] = useMutation(REMOVE_TIER);\n  return async (tierId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const {data} = await removeTier({\n        variables: {tierId: tierId},\n      });\n      console.log(tierId);\n      console.log(data);\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\n\n\nexport default class TierList extends Component  {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n    }\n    this.hideShowModal = this.hideShowModal.bind(this)\n  }\n  hideShowModal() {\n    this.setState(prevState => ({\n      modalShow: !prevState.modalShow\n    }))\n  }\n\n  render() {\n    const tiersLength = this.props.tiers?.data?.tiers?.length\n\n    // create function that accepts the book's mongo _id value as param and deletes the book from the database\n\n\n    // const handleAddToUser = async (accessArea, tierId) => {\n    //   const token = Auth.loggedIn() ? Auth.getToken() : null;\n    //   if (!token) {\n    //     return false;\n    //   }\n    //   try {\n    //     const { data } = await addEventToUser({\n    //       variables: { accessArea: accessArea, tierId: tierId },\n    //     });\n    //     console.log(data);\n    //     return data;\n    //   } catch (err) {\n    //     console.error(err);\n    //   }\n    // };\n\n    // if data isn't here yet, say so\n    return (\n      <>\n        <Jumbotron fluid className=\"text-light bg-dark\">\n          <Container>\n            <h1>Viewing tiers</h1>\n          </Container>\n        </Jumbotron>\n        <Container>\n          <h2>\n            {tiersLength\n              ? `Viewing saved tiers`\n              : \"You have no tiers!\"}\n          </h2>\n          <CardColumns>\n            {this.props.tiers?.data?.tiers?.map((tier) => {\n              return (\n                <Card key={tier.tierName} border=\"dark\">\n                  <Card.Title><h2>{tier.tierName}</h2></Card.Title>\n                  <Card.Body>\n                    {/* {console.log(tier.permissions)} */}\n                    <Card.Text>\n                      {tier.permissions.map((permission) => (\n                        <ListGroup>\n                          {permission.accessArea}\n                        </ListGroup>\n                      ))}\n                    </Card.Text>\n                    {/*\n                  <Card.Text>\n                    {tier.users.map((user) => (\n                      <>\n                        <p key={user.event}></p>\n                        <p key={user.area}></p>\n                        <p key={user.creator}></p>\n                        <p kry={user.tier}></p>\n                      </>\n                    ))}\n                  </Card.Text> */}\n                    <Button\n                      className=\"btn-block btn-dark\"\n                      // onClick={() => handleAddToUser(event._id)}\n                    >\n                      Assign to User!\n                    </Button>\n                    <Button\n                      className=\"btn-block btn-danger\"\n                      onClick={() => {\n                        HandleDeleteTier(tier._id);\n                        window.location.reload();\n                      }}\n                    >\n                      Delete this tier!\n                    </Button>\n\n                    {/* <Button\n                    className=\"btn-block btn-success\"\n                    onClick={() => handleEditTier(tier.name)}\n                  >\n                    Edit this tier!\n                  </Button> */}\n\n                    {/* <Button\n                    className=\"btn-block btn-success\"\n                    onClick={() => handleAddTierPermissions(tier.name)}\n                  >\n                    Add Permissions to this Tier!\n                  </Button> */}\n\n                    {/* <Button\n                    className=\"btn-block btn-success\"\n                    onClick={() => handleAddTierUsers(tier.name)}\n                  >\n                    Add Users to this Tier!\n                  </Button> */}\n                  </Card.Body>\n                </Card>\n              );\n            })}\n          </CardColumns>\n        </Container>\n      </>\n    );\n  }\n};\n\n\n","/Users/richardmiles/viPass/client/src/components/EventsForm/EventsForm.js",[],"/Users/richardmiles/viPass/client/src/components/TiersForm/TiersForm.js",[],"/Users/richardmiles/viPass/client/src/components/AdminsForm/AdminsForm.js",["129"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { MAKE_ADMIN } from '../../utils/mutations';\nimport { QUERY_ADMIN } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst AdminsForm = () => {\n  const [newAdminText, setNewAdminText] = useState('');\n\n\n  const [addAdmin, { error }] = useMutation(MAKE_ADMIN, {\n    update(cache, { data: { addAdmin } }) {\n      try {\n        const { users } = cache.readQuery({ query: QUERY_ADMIN });\n        cache.writeQuery({\n          query: QUERY_ADMIN,\n          data: { users: [addAdmin, ...users] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addAdmin({\n        variables: {\n          username: newAdminText,\n        },\n      });\n      const { username, value } = event.target;\n\n      if (username === 'newAdminText') {\n        setNewAdminText(value);\n      }\n      console.log(data)\n      setNewAdminText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'newAdminText') {\n      setNewAdminText(value);\n    }\n  };\n\n\n\n\n  return (\n    <div>\n      {Auth.loggedIn() ? (\n        <>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <input\n                className=\"form-input w-100\" type=\"text\"\n                style={{ lineHeight: \"1.5\", resize: \"vertical\" }}\n                placeholder=\"Who is the new admin?\"\n                value={newAdminText} onChange={(event) =>\n                  setNewAdminText(event.target.value)} />\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Admin\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be an admin to create new admins. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default AdminsForm;\n","/Users/richardmiles/viPass/client/src/components/EventsList/EventsList.js",["130"],"import React from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n  ListGroup,\n  // Modal,\n} from \"react-bootstrap\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport { REMOVE_EVENT, ADD_EVENT } from \"../../utils/mutations\";\nimport { QUERY_EVENT } from \"../../utils/queries\";\n\nconst EventsList = ({ events, tiers }) => {\n  const [removeEvent] = useMutation(REMOVE_EVENT);\n  const [addEventToUser] = useMutation(ADD_EVENT);\n  const { loading } = useQuery(QUERY_EVENT);\n  console.log(events.tiers);\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleremoveEvent = async (eventId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const { data } = await removeEvent({\n        variables: { eventId: eventId },\n      });\n      console.log(eventId);\n      console.log(data);\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // const handleAddToEvent = async (tierId, eventId) => {\n  //   const token = Auth.loggedIn() ? Auth.getToken() : null;\n  //   if (!token) {\n  //     return false;\n  //   }\n  //   try {\n  //     const { data } = await addTierToEvent({\n  //       variables: { tierId: tierId, eventId: eventId },\n  //     });\n  //     console.log(data);\n  //     return data;\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // };\n\n  // if data isn't here yet, say so\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing events!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {console.log(events)}\n          {events?.length\n            ? `Viewing ${events.length} saved ${\n                events.length === 1 ? \"event\" : \"events\"\n              }:`\n            : \"You have no events!\"}\n        </h2>\n        <CardColumns>\n          {events?.map((event) => {\n            return (\n              <Card key={event.accessArea} border=\"dark\">\n                <Card.Body>\n                  <Card.Title><h2>{event.name}</h2></Card.Title>\n                  <Card.Text>\n                    {event.tiers.map((tier) => (\n                        <ListGroup>\n                          {tier.tierName}\n                        </ListGroup>\n                    ))}\n                  </Card.Text>\n                  <Button\n                    className=\"btn-block btn-dark\"\n                    // onClick={() => handleAddToEvent(tier._id)}\n                  >\n                    Add tiers to this event!\n                  </Button>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => {\n                      handleremoveEvent(event._id);\n                      window.location.reload();\n                    }}\n                  >\n                    Delete this event!\n                  </Button>\n\n                  {/* <Button\n                    className=\"btn-block btn-success\"\n                    onClick={() => handleEditEvent(event.name)}\n                  >\n                    Edit this event!\n                  </Button> */}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\nexport default EventsList;\n","/Users/richardmiles/viPass/client/src/components/PermissionsList/PermissionsList.js",["131","132","133"],"import React, {Component} from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\nimport {useQuery, useMutation} from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\nimport {REMOVE_PERMISSION, ADD_PERMISSION} from \"../../utils/mutations\";\nimport {QUERY_EVENT} from \"../../utils/queries\";\nimport PermissionModal from '../PermissionModal/PermissionModal'\n\n\nconst HandleRemovePermission = () => {\n  const [removePermission] = useMutation(REMOVE_PERMISSION);\n  return async (permissionId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const {data} = await removePermission({\n        variables: {permissionId: permissionId},\n      });\n      console.log(permissionId);\n      console.log(data);\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport default class PermissionsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n    }\n    this.hideShowModal = this.hideShowModal.bind(this)\n  }\n\n  hideShowModal() {\n    this.setState(prevState => ({\n      modalShow: !prevState.modalShow\n    }))\n  }\n\n\n  render() {\n    const permissionsLength = this.props.permissions?.data?.permissions?.length\n\n    // create function that accepts the book's mongo _id value as param and deletes the book from the database\n\n    // const handleAddToTier = async (accessArea, tierId) => {\n    //   const token = Auth.loggedIn() ? Auth.getToken() : null;\n    //   if (!token) {\n    //     return false;\n    //   }\n    //   try {\n    //     const { data } = await addPermissiontoTier({\n    //       variables: { accessArea: accessArea, tierId: tierId },\n    //     });\n    //     console.log(data);\n    //     return data;\n    //   } catch (err) {\n    //     console.error(err);\n    //   }\n    // };\n\n\n    // if data isn't here yet, say so\n    return (\n      <>\n        <Jumbotron fluid className=\"text-light bg-dark\">\n          <Container>\n            <h1>Viewing permissions!</h1>\n          </Container>\n        </Jumbotron>\n        <Container>\n          <h2>\n            {permissionsLength\n              ? `Viewing saved permissions`\n              : \"You have no permissions!\"}\n          </h2>\n          <CardColumns>\n            {this.props.permissions?.data?.permissions?.map((permission) => {\n\n              return (\n                <Card key={permission.accessArea} border=\"dark\">\n                  <Card.Body>\n                    <Card.Title>{permission.accessArea}</Card.Title>\n                    <p className=\"small\">\n                      Permission Creator: {permission.accessCreator}\n                    </p>\n                    <Card.Text>{permission.accessArea}</Card.Text>\n                    <Button\n                      className=\"btn-block btn-dark\"\n                      onClick={this.hideShowModal}\n                    >\n                      Add to tier!\n                    </Button>\n                    {this.state.modalShow\n                    && <PermissionModal\n                      permission={permission.accessArea}\n                      apolloClient={this.props.apolloClient}\n                      currentUser={this.props.currentUser}\n                      permissions={this.props.permissions}\n                      tiers={this.props.tiers}\n                      events={this.props.events}\n                      admins={this.props.admins}\n                      show={this.hideShowModal}\n                      onHide={this.hideShowModal}\n                    />}\n                    <Button\n                      className=\"btn-block btn-danger\"\n                      onClick={() => {\n                        HandleRemovePermission(permission._id);\n                        window.location.reload();\n                      }}\n                    >\n                      Delete this permission!\n                    </Button>\n\n                    {/* <Button\n                    className=\"btn-block btn-success\"\n                    onClick={() => handleEditPermission(permission.name)}\n                  >\n                    Edit this permission!\n                  </Button> */}\n                  </Card.Body>\n                </Card>\n              );\n            })}\n          </CardColumns>\n        </Container>\n      </>\n    );\n  }\n};\n\n","/Users/richardmiles/viPass/client/src/components/AdminsList/AdminsList.js",[],"/Users/richardmiles/viPass/client/src/components/PermissionsForm/PermissionsForm.js",[],"/Users/richardmiles/viPass/client/src/components/PermissionModal/PermissionModal.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":5,"column":10,"nodeType":"140","messageId":"141","endLine":5,"endColumn":18},{"ruleId":"138","severity":1,"message":"142","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":14,"column":3,"nodeType":"145","messageId":"146","endLine":16,"endColumn":4},{"ruleId":"138","severity":1,"message":"139","line":5,"column":9,"nodeType":"140","messageId":"141","endLine":5,"endColumn":17},{"ruleId":"138","severity":1,"message":"147","line":10,"column":9,"nodeType":"140","messageId":"141","endLine":10,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":14,"column":3,"nodeType":"145","messageId":"146","endLine":16,"endColumn":4},{"ruleId":"138","severity":1,"message":"148","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":8,"column":40,"nodeType":"140","messageId":"141","endLine":8,"endColumn":48},{"ruleId":"143","severity":1,"message":"144","line":11,"column":3,"nodeType":"145","messageId":"146","endLine":13,"endColumn":4},{"ruleId":"138","severity":1,"message":"149","line":5,"column":3,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"138","severity":1,"message":"150","line":7,"column":3,"nodeType":"140","messageId":"141","endLine":7,"endColumn":12},{"ruleId":"138","severity":1,"message":"151","line":8,"column":3,"nodeType":"140","messageId":"141","endLine":8,"endColumn":9},{"ruleId":"138","severity":1,"message":"139","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":18},{"ruleId":"138","severity":1,"message":"152","line":12,"column":22,"nodeType":"140","messageId":"141","endLine":12,"endColumn":30},{"ruleId":"138","severity":1,"message":"153","line":12,"column":32,"nodeType":"140","messageId":"141","endLine":12,"endColumn":49},{"ruleId":"138","severity":1,"message":"142","line":13,"column":10,"nodeType":"140","messageId":"141","endLine":13,"endColumn":20},{"ruleId":"138","severity":1,"message":"154","line":48,"column":9,"nodeType":"140","messageId":"141","endLine":48,"endColumn":21},{"ruleId":"138","severity":1,"message":"155","line":18,"column":10,"nodeType":"140","messageId":"141","endLine":18,"endColumn":24},{"ruleId":"138","severity":1,"message":"139","line":9,"column":9,"nodeType":"140","messageId":"141","endLine":9,"endColumn":17},{"ruleId":"138","severity":1,"message":"156","line":11,"column":28,"nodeType":"140","messageId":"141","endLine":11,"endColumn":42},{"ruleId":"138","severity":1,"message":"157","line":12,"column":9,"nodeType":"140","messageId":"141","endLine":12,"endColumn":20},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'QUERY_TIER' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'QUERY_PERMISSIONS' is defined but never used.","'ApolloClient' is defined but never used.","'CardColumns' is defined but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'ADD_TIER' is defined but never used.","'REMOVE_PERMISSION' is defined but never used.","'handleChange' is assigned a value but never used.","'addEventToUser' is assigned a value but never used.","'ADD_PERMISSION' is defined but never used.","'QUERY_EVENT' is defined but never used.","no-global-assign","no-unsafe-negation"]